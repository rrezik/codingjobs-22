-- Explanation :

Now, there is a 'novels' table that has the same fields as the 'books' table.
For this exercises, use union command.

-- Queries :
	- Recover all novels and all books in one query.
		SELECT *
		FROM books
		UNION
		SELECT *
		FROM novels

	- Collect all novels and all books from/since 2018

			SELECT *
			FROM books
			WHERE date_of_release > '2018-01-01'
			UNION
			SELECT *
			FROM novels
			WHERE date_of_release > '2018-01-01'

	- Collect all the novels and all the books with the author.
		SELECT title as t, author_id
		FROM books
		UNION
		SELECT title as t, author_id
		FROM novels


	- Get the total price per author (books and novels combined).

    SELECT author_id, SUM(price) as TotalAmount
    FROM (SELECT author_id, price
		FROM books
		UNION
		SELECT author_id, price
		FROM novels) as tempTable
    GROUP BY author_id



	- Get the total price for all books AND all novels (books and novels seperated).

	SELECT 'books' as tablename, SUM(price)
	FROM books
	UNION
	SELECT 'novels' as tablename, SUM(price)
	FROM novels

	SELECT CONCAT('Books : ', SUM(price))
	FROM books
	UNION
	SELECT CONCAT('Novels : ', SUM(price))
	FROM novels


